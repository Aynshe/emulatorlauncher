name: Build Batocera-Ports

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Installer le .NET Framework 4.0 Developer Pack
    - name: Install .NET Framework 4.0
      run: |
        Invoke-WebRequest -Uri "https://download.microsoft.com/download/9/5/a/95a9616b-7a37-4af6-bc36-d6ea96c8daae/dotNetFx40_Full_x86_x64.exe" -OutFile "$env:TEMP\dotNetFx40.exe"
        Start-Process -FilePath "$env:TEMP\dotNetFx40.exe" -ArgumentList "/q /norestart" -Wait

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Restore NuGet packages
      run: nuget restore batocera-ports.sln

    - name: Build solution (Release)
      run: msbuild batocera-ports.sln /p:Configuration=Release

    - name: Archive all build outputs
      shell: pwsh
      run: |
        $zipPath = "batocera-ports-Release.zip"
        $releaseDirs = Get-ChildItem -Path . -Recurse -Include Release -Directory | Where-Object { $_.FullName -match "\\bin\\Release$" }
        $tempDir = "all-builds"
        New-Item -ItemType Directory -Force -Path $tempDir | Out-Null
        foreach ($dir in $releaseDirs) {
          $projectName = Split-Path (Split-Path $dir.FullName -Parent) -Leaf
          $dest = Join-Path $tempDir $projectName
          Copy-Item -Path "$($dir.FullName)\*" -Destination $dest -Recurse -Force
        }
        Compress-Archive -Path "$tempDir\*" -DestinationPath $zipPath -Force
        echo "ZIP_PATH=$zipPath" >> $env:GITHUB_ENV

    - name: Upload artifact (ZIP)
      uses: actions/upload-artifact@v4
      with:
        name: batocera-ports-Release
        path: ${{ env.ZIP_PATH }}
